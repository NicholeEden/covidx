

@inject ITestRequestService _testRequestService
@inject UserManager<CovidXUser> _userManager


@{
	var newTableList = new List<TestRequest>();

	//// get the user id
	var user = await _userManager.GetUserAsync(User);


	var scheduledRequests = _testRequestService.GetScheduledTestRequests(user.Id).Where(x=>x.DateAssigned ==DateTime.Today);


	newTableList.AddRange(scheduledRequests);

}

<!-- PAGE HEADER -->
<partial name="Header/_schedulePartial.cshtml" />

<!-- 6 COLUMN CARD START -->
<div class="col-md-12">
	<div class="card card-lightblue">
		<!-- CARD HEADER START -->
		<div class="card-header border-0">
			<h3 class="card-title">Tests requests that need to be performed today</h3>
			<!-- CARD TOOLS START -->
			<div class="card-tools">
				<!-- ADD CARD TOOLS HERE -->
				<partial name="CovidXAdminLte/Card/Tools/_collapsePartial" />
				<partial name="CovidXAdminLte/Card/Tools/_maximizePartial" />

			</div>
			<!-- CARD TOOLS END -->
		</div>
		<!-- CARD HEADER END -->
		<!-- CARD BODY START -->
		<div class="card-body table-responsive p-0">
			<!-- ADD CONTENT HERE -->
			<table class="table table-striped table-valign-middle">
				<thead>
					<tr>
						<!-- TABLE HEADERS -->
						<th>Test Subject</th>
						<th>Test Location</th> <!-- Test Address-->
						<th>Suburb</th>
						<th>Test Status</th>
						<th>Action</th>
					</tr>
				</thead>

				<tbody>

					@foreach (var fav in newTableList)
					{
						<!-- TABLE CONTENT ROW -->
						<tr>
							@if (fav.DependentId is null)
							{
								<td>
									@fav.Patient.FirstName  @fav.Patient.LastName

								</td>
							}
							else
							{
								<td>
									@fav.Dependent.FirstName  @fav.Dependent.LastName

								</td>
							}
							<td>
								@fav.TestAddress1
							</td>
							<td>
								@fav.Suburb.SuburbName
							</td>
							<td>
								@switch (fav.RequestStatus)
								{
									case CovidEnums.TestRequestStatus.New:
										<span class="badge bg-orange">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.Cancelled:
										<span class="badge bg-red">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.Assigned:
										<span class="badge bg-yellow">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.Scheduled:
										<span class="badge bg-green">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.Performed:
										<span class="badge bg-success">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.AtLab:
										<span class="badge bg-blue">@fav.RequestStatus</span>
										break;
									case CovidEnums.TestRequestStatus.Closed:
										<span class="badge bg-danger">@fav.RequestStatus</span>
										break;
									default:
										break;
								}
							</td>
							<td>

								<button class="btn btn-block btn-outline-primary btn-flat" data-target="#modal-@fav.TestRequestId" data-toggle="modal">
									Perform Test
								</button>
								<input type="hidden" name="testRequestID" value="@fav.TestRequestId" />
								<input type="hidden" name="userID" value="@user.Id" />

							</td>
						</tr>



					}
				</tbody>



			</table>

		</div>
		<!-- CARD BODY END -->
	</div>
</div>
<!-- 6 COLUMN CARD END -->

@foreach (var item in newTableList)
{
	var name = "modal-" + item.TestRequestId.ToString();
	<partial name="Modal/_PerformModal" model="new TestViewModel { ModalID = name , TestRequestId=item.TestRequestId}" />
}
